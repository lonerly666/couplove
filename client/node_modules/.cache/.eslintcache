[{"C:\\Users\\PC\\myProject\\couplove\\client\\src\\index.js":"1","C:\\Users\\PC\\myProject\\couplove\\client\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\myProject\\couplove\\client\\src\\App.js":"3","C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\UserProfileForm.js":"4","C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\Home.js":"5","C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\Login.js":"6"},{"size":511,"mtime":1621334728533,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1621334728534,"results":"9","hashOfConfig":"8"},{"size":513,"mtime":1621337766271,"results":"10","hashOfConfig":"8"},{"size":4724,"mtime":1621337525956,"results":"11","hashOfConfig":"8"},{"size":1539,"mtime":1621292768417,"results":"12","hashOfConfig":"8"},{"size":628,"mtime":1621292768418,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ddlq0p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\myProject\\couplove\\client\\src\\index.js",[],["29","30"],"C:\\Users\\PC\\myProject\\couplove\\client\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\myProject\\couplove\\client\\src\\App.js",[],"C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\UserProfileForm.js",["31"],"import {useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport '../css/profileInfo.css';\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst genders = [\r\n    {\r\n      value: 'male',\r\n      label: 'male',\r\n    },\r\n    {\r\n      value: 'female',\r\n      label: 'female',\r\n    },\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginTop:20,\r\n      minWidth: \"90%\",\r\n    },\r\n    large: {\r\n      width: theme.spacing(19),\r\n      height: theme.spacing(19),\r\n    },\r\n  }));\r\nexport default function UserProfileForm()\r\n{\r\n    const [nickname,setNickname] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [croppedUrl, setCroppedUrl] = useState();\r\n    const [dob,setDob] = useState(new Date());\r\n    const [gender,setGender] = useState('male');\r\n    const formRef = useRef();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        axios.get('/auth/isLoggedIn')\r\n        .then(res =>res.data)\r\n        .catch(err => console.log(err))\r\n        .then(res => {\r\n          if (res.isLoggedIn === false) {\r\n            window.open('/login', '_self');\r\n          } \r\n          else if(res.user.nickname)\r\n          {\r\n            setNickname(res.user.nickname);\r\n          }\r\n        })\r\n        return function cancel() {\r\n          ac.abort()\r\n        }\r\n      });\r\n\r\n      async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const formData = new FormData(formRef.current);\r\n        await axios({\r\n          method:'post',\r\n          url:'/user/info',\r\n          data:formData,\r\n          headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n        window.location.href = \"/\";\r\n      }\r\n\r\n    return <div className=\"infoForm\">\r\n        \r\n    <form onSubmit={handleSubmit} ref={formRef}>\r\n    <ReactAvatar\r\n            style={{borderStyle: \"solid\", borderColor: \"#F0F2F5\", borderWidth: \"2px\", margin: \"auto\"}}\r\n            alt=\"user profile\"\r\n            src={croppedUrl}\r\n            id=\"avatar\"\r\n            className={classes.large} />\r\n          <input type=\"file\" name=\"file\" id=\"file\"/>\r\n          <br/>\r\n          <div className=\"infoDiv\">\r\n            <TextField\r\n            id=\"nickname\"\r\n            className=\"inputFields\"\r\n            label=\"Nickname\"\r\n            variant=\"outlined\"\r\n            name=\"nickname\"\r\n            value={nickname}\r\n            onChange={(e) => {setNickname(e.target.value)}}/>\r\n            <br/>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={gender}\r\n              onChange={(e) => {setGender(e.target.value)}}\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n            >\r\n              {genders.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl> \r\n          <br />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"dateOfBirth\"\r\n              label=\"Date of birth (mm/dd/yyyy)\"\r\n              name=\"dateOfBirth\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={dob}\r\n              onChange={(date) => {setDob(date)}}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n          <br/>    \r\n        \r\n     \r\n          <TextField\r\n            id=\"bio\"\r\n            label=\"Bio\"\r\n            variant=\"outlined\"\r\n            name=\"bio\"\r\n            className=\"inputFields\"\r\n            value={bio}\r\n            onChange={(e) => {setBio(e.target.value)}}/>\r\n            <br/>\r\n            \r\n          <Button type=\"submit\" id=\"submitInfo\">\r\n              submit\r\n          </Button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n}","C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\Home.js",["32","33","34","35","36"],"import {useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: \"100%\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\nexport default function Home()\r\n{\r\n  const [userInfo,setUserInfo] = useState();\r\n  const classes = useStyles();\r\n  const [imgUrl,setImgUrl] = useState();\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        axios.get('/auth/isLoggedIn')\r\n        .then(res =>res.data)\r\n        .catch(err => console.log(err))\r\n        .then(res => {\r\n          if (res.isLoggedIn === false) {\r\n            window.open('/login', '_self');\r\n          } \r\n          else if(res.user.nickname===undefined||res.user.nickname===null||res.user.nickname===\"\")\r\n          {\r\n            window.open('/userProfileForm','_self');\r\n          }\r\n        })\r\n        return function cancel() {\r\n          ac.abort()\r\n        }\r\n      });\r\n\r\n      function handleLogout()\r\n      {\r\n        window.location.href = \"/auth/logout\";\r\n      }\r\n\r\n    return <div>\r\n        <ReactAvatar\r\n            style={{borderStyle: \"solid\", borderColor: \"#F0F2F5\", borderWidth: \"2px\", margin: \"auto\"}}\r\n            alt=\"\"\r\n            src =\"/gridFs/getProfile\"\r\n            className={classes.large} \r\n         />\r\n        <input type=\"submit\" value=\"logout\" onClick={handleLogout}/>\r\n    </div>\r\n}","C:\\Users\\PC\\myProject\\couplove\\client\\src\\components\\Login.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":44,"column":24,"nodeType":"44","messageId":"45","endLine":44,"endColumn":37},{"ruleId":"42","severity":1,"message":"46","line":1,"column":30,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"47","line":17,"column":10,"nodeType":"44","messageId":"45","endLine":17,"endColumn":18},{"ruleId":"42","severity":1,"message":"48","line":17,"column":19,"nodeType":"44","messageId":"45","endLine":17,"endColumn":30},{"ruleId":"42","severity":1,"message":"49","line":19,"column":10,"nodeType":"44","messageId":"45","endLine":19,"endColumn":16},{"ruleId":"42","severity":1,"message":"50","line":19,"column":17,"nodeType":"44","messageId":"45","endLine":19,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":16,"column":13,"nodeType":"53","endLine":16,"endColumn":120},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'setCroppedUrl' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'imgUrl' is assigned a value but never used.","'setImgUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]