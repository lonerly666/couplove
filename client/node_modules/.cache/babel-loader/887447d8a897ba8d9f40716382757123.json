{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst ENDPOINT = 'localhost:5000';\nlet socket;\nlet isCaller = false;\nlet isAnswered = false;\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [userId, setUserId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [newMessage, setNewMessage] = useState([]);\n  const [partnerId, setPartnerId] = useState();\n  const [isCalling, setIsCalling] = useState(false);\n  const [isOnline, setIsOnline] = useState(true);\n  const [users, setUsers] = useState();\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.on('chatMsg', chat => {\n      setNewMessage(chat);\n    });\n    socket.on('start', e => {\n      setIsCalling(true);\n    });\n    socket.on('no', e => {\n      alert('your partner is not online!');\n    });\n  }, []);\n  useEffect(() => {\n    if (!isCalling) {\n      return null;\n    }\n\n    socket.on('returnDiv', e => {\n      document.getElementById(\"container\").style.left = \"50%\";\n      document.getElementById(\"container\").style.width = \"80%\";\n      document.getElementById(\"chat\").style.width = \"1000px\";\n      document.getElementById(\"video-div\").style.display = \"none\";\n    });\n    socket.on('calluser', async ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    socket.on('moveDiv', e => {\n      document.getElementById(\"container\").style.left = \"36%\";\n      document.getElementById(\"container\").style.width = \"70%\";\n      document.getElementById(\"chat\").style.width = \"800px\";\n      document.getElementById(\"video-div\").style.display = \"block\";\n    });\n    socket.on('dc', e => {\n      leaveCall();\n    });\n  }, [isCalling]); // useEffect(()=>{\n  //   if(callAccepted)\n  //   {\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //     .then((currentStream) => {\n  //     setStream(currentStream);\n  //     myVideo.current.srcObject = currentStream;\n  //     });\n  //   }\n  // },[callAccepted])\n\n  const startCall = () => {\n    socket.emit('calling');\n  };\n\n  const joinRoom = (roomId, userId, nickname) => {\n    socket.emit('join', {\n      userId,\n      roomId\n    });\n    setUserId(userId);\n    setRoomId(roomId);\n    setPartnerId(partnerId);\n    setName(nickname);\n  };\n\n  let audio = true;\n\n  const muteAudio = () => {\n    audio = !audio;\n    stream.getAudioTracks()[0].enabled = audio;\n  };\n\n  let video = true;\n\n  const muteVideo = () => {\n    video = !video;\n    stream.getVideoTracks()[0].enabled = video;\n  };\n\n  const sendMsg = (msg, nickname) => {\n    socket.emit('sendMsg', {\n      msg,\n      userId,\n      nickname,\n      roomId\n    });\n  };\n\n  const declineCall = () => {\n    setCallEnded(true);\n\n    if (isCaller) {\n      document.getElementById(\"container\").style.left = \"50%\";\n      document.getElementById(\"container\").style.width = \"70%\";\n      document.getElementById(\"chat\").style.width = \"800px\";\n      document.getElementById(\"video-div\").style.visibility = \"none\";\n    }\n\n    setIsCalling(false);\n    window.location.reload();\n  };\n\n  const answerCall = async () => {\n    let local;\n    await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      local = currentStream;\n      myVideo.current.srcObject = currentStream;\n    });\n    isAnswered = true;\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: localStream\n    });\n    peer.on('signal', data => {\n      socket.emit('answercall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      console.log(\"this is the remote stream: \" + currentStream);\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const initializeVideo = async () => {};\n\n  const callUser = async () => {\n    let local;\n    await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      local = currentStream;\n      myVideo.current.srcObject = currentStream;\n    });\n    isCaller = true;\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: local\n    });\n    peer.on('signal', data => {\n      socket.emit('calluser', {\n        signalData: data,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      console.log('call accepted: ' + signal);\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    if (isCaller) {\n      document.getElementById(\"container\").style.left = \"50%\";\n      document.getElementById(\"container\").style.width = \"70%\";\n      document.getElementById(\"chat\").style.width = \"800px\";\n      document.getElementById(\"video-div\").style.visibility = \"none\";\n    }\n\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      newMessage,\n      sendMsg,\n      joinRoom,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      callUser,\n      leaveCall,\n      answerCall,\n      users,\n      isOnline,\n      initializeVideo,\n      startCall,\n      muteAudio,\n      muteVideo,\n      declineCall,\n      isCaller,\n      isAnswered\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"RgL/S4Cklchd5KHVXsdMcZFKdGM=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","ENDPOINT","socket","isCaller","isAnswered","ContextProvider","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","userId","setUserId","roomId","setRoomId","newMessage","setNewMessage","partnerId","setPartnerId","isCalling","setIsCalling","isOnline","setIsOnline","users","setUsers","myVideo","userVideo","connectionRef","on","chat","e","alert","document","getElementById","style","left","width","display","from","callerName","signal","isReceivingCall","leaveCall","startCall","emit","joinRoom","nickname","audio","muteAudio","getAudioTracks","enabled","video","muteVideo","getVideoTracks","sendMsg","msg","declineCall","visibility","window","location","reload","answerCall","local","navigator","mediaDevices","getUserMedia","then","currentStream","current","srcObject","peer","initiator","trickle","localStream","data","to","console","log","initializeVideo","callUser","signalData","destroy"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst ENDPOINT='localhost:5000';\r\nlet socket;\r\nlet isCaller = false;\r\nlet isAnswered = false;\r\nconst ContextProvider = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [userId,setUserId] = useState('');\r\n  const [roomId,setRoomId] = useState('');\r\n  const [newMessage,setNewMessage] = useState([]);\r\n  const [partnerId,setPartnerId] = useState();\r\n  const [isCalling,setIsCalling] = useState(false);\r\n  const [isOnline,setIsOnline] = useState(true);\r\n  const [users,setUsers] = useState();\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n\r\n   \r\n\r\n  useEffect(() => {\r\n\r\n    socket = io(ENDPOINT);\r\n     \r\n    socket.on('chatMsg',(chat)=>{\r\n        setNewMessage(chat);\r\n    })\r\n\r\n    socket.on('start',e=>{\r\n      setIsCalling(true);\r\n    })\r\n\r\n    socket.on('no',e=>{\r\n      alert('your partner is not online!')\r\n    })\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    \r\n    \r\n\r\n    if(!isCalling)\r\n    {\r\n      return null;\r\n    }\r\n     \r\n\r\n   socket.on('returnDiv',e=>{\r\n      document.getElementById(\"container\").style.left = \"50%\"\r\n      document.getElementById(\"container\").style.width = \"80%\";\r\n      document.getElementById(\"chat\").style.width = \"1000px\";\r\n      document.getElementById(\"video-div\").style.display = \"none\";\r\n\r\n   })\r\n\r\n   socket.on('calluser',async ({ from, name: callerName, signal })=> {\r\n    setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n    \r\n  });\r\n\r\n   socket.on('moveDiv',e=>{\r\n      document.getElementById(\"container\").style.left = \"36%\"\r\n      document.getElementById(\"container\").style.width = \"70%\";\r\n      document.getElementById(\"chat\").style.width = \"800px\";\r\n      document.getElementById(\"video-div\").style.display = \"block\";\r\n      \r\n      \r\n   })\r\n\r\n    socket.on('dc',e=>{\r\n      leaveCall();\r\n    })\r\n\r\n  },[isCalling])\r\n\r\n  // useEffect(()=>{\r\n  //   if(callAccepted)\r\n  //   {\r\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n  //     .then((currentStream) => {\r\n  //     setStream(currentStream);\r\n  //     myVideo.current.srcObject = currentStream;\r\n  //     });\r\n  //   }\r\n  // },[callAccepted])\r\n\r\n  const startCall  =()=>{\r\n    socket.emit('calling');\r\n  }\r\n  \r\n  const joinRoom = (roomId,userId,nickname) =>{\r\n      socket.emit('join',{userId,roomId});\r\n      setUserId(userId);\r\n      setRoomId(roomId);\r\n      setPartnerId(partnerId)\r\n      setName(nickname);\r\n  }\r\n  let audio =true;\r\n  const muteAudio = ()=>{\r\n    audio  = !audio;\r\n    stream.getAudioTracks()[0].enabled = audio;\r\n  }\r\n\r\n  let video =true;\r\n  const muteVideo = ()=>{\r\n    video  = !video;\r\n    stream.getVideoTracks()[0].enabled = video;\r\n  }\r\n\r\n  const sendMsg = (msg,nickname) =>{\r\n      socket.emit('sendMsg',{msg,userId,nickname,roomId})\r\n  }\r\n\r\n  const declineCall = ()=>{\r\n    setCallEnded(true);\r\n    if(isCaller)\r\n    {\r\n      document.getElementById(\"container\").style.left = \"50%\"\r\n      document.getElementById(\"container\").style.width = \"70%\";\r\n      document.getElementById(\"chat\").style.width = \"800px\";\r\n      document.getElementById(\"video-div\").style.visibility = \"none\";\r\n    }\r\n    setIsCalling(false);\r\n    window.location.reload();\r\n  }\r\n\r\n  const answerCall = async() => {\r\n    let local;\r\n    await navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n    .then((currentStream) => {\r\n    setStream(currentStream);\r\n    local = currentStream;\r\n    myVideo.current.srcObject = currentStream;\r\n    }); \r\n    isAnswered = true;\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream:localStream });\r\n    peer.on('signal', (data) => {\r\n      socket.emit('answercall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      console.log(\"this is the remote stream: \" + currentStream);\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const initializeVideo= async()=>{\r\n    \r\n    \r\n  }\r\n\r\n  const callUser = async() => {\r\n    let local;\r\n    await navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n    .then((currentStream) => {\r\n    setStream(currentStream);\r\n    local = currentStream;\r\n    myVideo.current.srcObject = currentStream;\r\n    }); \r\n    isCaller = true;\r\n    const peer = new Peer({ initiator: true, trickle: false, stream:local });\r\n    peer.on('signal', (data) => {\r\n      socket.emit('calluser', {  signalData: data,  name });\r\n    });\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on('callaccepted', (signal) => {\r\n      console.log('call accepted: ' + signal);\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    if(isCaller)\r\n    {\r\n      document.getElementById(\"container\").style.left = \"50%\"\r\n      document.getElementById(\"container\").style.width = \"70%\";\r\n      document.getElementById(\"chat\").style.width = \"800px\";\r\n      document.getElementById(\"video-div\").style.visibility = \"none\";\r\n    }\r\n    connectionRef.current.destroy();\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={{\r\n      call,\r\n      callAccepted,\r\n      myVideo,\r\n      newMessage,\r\n      sendMsg,\r\n      joinRoom,\r\n      userVideo,\r\n      stream,\r\n      name,\r\n      setName,\r\n      callEnded,\r\n      callUser,\r\n      leaveCall,\r\n      answerCall,\r\n      users,\r\n      isOnline,\r\n      initializeVideo,\r\n      startCall,\r\n      muteAudio,\r\n      muteVideo,\r\n      declineCall,\r\n      isCaller,\r\n      isAnswered,\r\n    }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };"]},"metadata":{},"sourceType":"module"}