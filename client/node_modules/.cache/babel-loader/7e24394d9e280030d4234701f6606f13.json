{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { set } from 'mongoose';\nimport MessageBox from './MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function ChatRoom(props) {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [userInfo, setUserInfo] = useState();\n  const [userId, setUserId] = useState();\n  const [roomId, setRoomId] = useState();\n  const [text, setText] = useState();\n  const [userNickname, setUserNickname] = useState();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const ac = new AbortController();\n    socket = io(ENDPOINT);\n    axios.get('/auth/isLoggedIn').then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res.isLoggedIn) {\n        let userId = res.user._id;\n\n        if (res.user.partner !== null) {\n          axios({\n            method: 'get',\n            url: '/user/getRoomId',\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(res => res.data).catch(err => console.log(err)).then(res => {\n            let roomId = res.roomInfo._id;\n            setRoomId(roomId);\n            socket.emit('join', {\n              roomId,\n              userId\n            }, ({\n              error\n            }) => {});\n          });\n        }\n\n        setUserId(res.user._id);\n        setUserInfo({ ...res.user\n        });\n        setUserNickname(res.user.nickname);\n      }\n    });\n    return function cancel() {\n      ac.abort();\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('chatMsg', chat => {\n      setMessages(prevData => {\n        return [...prevData, chat];\n      });\n    });\n  }, [messages]);\n\n  function handleSendMsg(event) {\n    event.preventDefault();\n\n    if (text.length > 0) {\n      console.log(userNickname);\n      socket.emit('sendMsg', {\n        text,\n        roomId,\n        userId,\n        userNickname\n      });\n      setText(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CHAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMsg,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        type: \"text\",\n        onChange: event => setText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MessageBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n}\n\n_s(ChatRoom, \"+WgiRqoix+qE/uRh8Tn5uvtk+N4=\");\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/components/ChatRoom.js"],"names":["useEffect","useState","useRef","io","axios","set","MessageBox","socket","ChatRoom","props","ENDPOINT","userInfo","setUserInfo","userId","setUserId","roomId","setRoomId","text","setText","userNickname","setUserNickname","messages","setMessages","ac","AbortController","get","then","res","data","catch","err","console","log","isLoggedIn","user","_id","partner","method","url","headers","roomInfo","emit","error","nickname","cancel","abort","off","on","chat","prevData","handleSendMsg","event","preventDefault","length","target","value"],"mappings":"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","sourcesContent":["import {useEffect, useState,useRef} from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport { set } from 'mongoose';\r\nimport MessageBox from './MessageBox';\r\nlet socket;\r\nexport default function ChatRoom(props)\r\n{\r\n    const ENDPOINT = 'localhost:5000';\r\n    const [userInfo,setUserInfo] = useState();\r\n    const [userId,setUserId] = useState();\r\n    const [roomId,setRoomId] = useState();\r\n    const [text,setText] = useState();\r\n    const [userNickname,setUserNickname] = useState();\r\n    const [messages,setMessages] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const ac = new AbortController();\r\n        socket = io(ENDPOINT);\r\n        axios.get('/auth/isLoggedIn')\r\n        .then(res =>res.data)\r\n        .catch(err => console.log(err))\r\n        .then(res => {\r\n            if(res.isLoggedIn)\r\n            {\r\n              let userId = res.user._id;\r\n                if(res.user.partner!==null)\r\n                { \r\n                  axios({ \r\n                    method:'get',\r\n                    url:'/user/getRoomId',\r\n                    headers: {'Content-Type': 'multipart/form-data'}\r\n                  })\r\n                  .then(res=>res.data)\r\n                  .catch(err=>console.log(err))\r\n                  .then(res=>{\r\n                    let roomId = res.roomInfo._id;\r\n                    setRoomId(roomId);\r\n                    \r\n                    socket.emit('join',{roomId,userId},({error})=>{\r\n\r\n                    })\r\n                  })\r\n                }\r\n                setUserId(res.user._id);\r\n                setUserInfo({...res.user});\r\n                setUserNickname(res.user.nickname);\r\n            }\r\n        });\r\n\r\n        \r\n        return function cancel() {\r\n            ac.abort();\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n          }\r\n    },[ENDPOINT])\r\n\r\n    useEffect(()=>{\r\n      socket.on('chatMsg',(chat)=>{\r\n        setMessages(prevData=>{\r\n          return [...prevData,chat];\r\n        })\r\n      })\r\n    },[messages]);\r\n\r\n    \r\n\r\n    function handleSendMsg(event)\r\n    {\r\n      event.preventDefault();\r\n      if(text.length>0)\r\n      {\r\n        console.log(userNickname);\r\n        socket.emit('sendMsg',{text,roomId,userId,userNickname});\r\n        setText(\"\");\r\n      }\r\n    }\r\n    return<div>\r\n        <div>\r\n            <h1>CHAT</h1>\r\n        </div>\r\n        <form onSubmit={handleSendMsg}>\r\n        <input value={text} type=\"text\" onChange={(event)=>setText(event.target.value)}/>\r\n        <input type=\"submit\"/>\r\n        </form>\r\n        <MessageBox/>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}