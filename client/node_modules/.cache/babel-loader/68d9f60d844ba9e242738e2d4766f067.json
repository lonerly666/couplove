{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst ENDPOINT = 'localhost:5000';\nlet socket;\nconst ss = {\n  stream: null\n};\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [userId, setUserId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [newMessage, setNewMessage] = useState([]);\n  const [partnerId, setPartnerId] = useState();\n  const [isOnline, setIsOnline] = useState(true);\n  const [users, setUsers] = useState();\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(async () => {\n    socket = io(ENDPOINT);\n    socket.on('me', data => {\n      console.log(data.id);\n      console.log(data.users);\n      console.log(data.users.length);\n    });\n    socket.on('returnDiv', e => {\n      document.getElementById(\"container\").style.left = \"50%\";\n      document.getElementById(\"container\").style.width = \"80%\";\n      document.getElementById(\"chat\").style.width = \"1000px\";\n      document.getElementById(\"video-div\").style.visibility = \"none\";\n    });\n    socket.on('moveDiv', e => {\n      document.getElementById(\"container\").style.left = \"36%\";\n      document.getElementById(\"container\").style.width = \"70%\";\n      document.getElementById(\"chat\").style.width = \"800px\";\n      document.getElementById(\"video-div\").style.visibility = \"visible\";\n    });\n    socket.on('dc', data => {\n      // console.log(data.id);\n      console.log(data.users);\n      setUsers(data.users);\n    });\n    socket.on('chatMsg', chat => {\n      setNewMessage(chat);\n    });\n    socket.on('calluser', async ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []); // useEffect(()=>{\n  //   if(callAccepted)\n  //   {\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //     .then((currentStream) => {\n  //     setStream(currentStream);\n  //     myVideo.current.srcObject = currentStream;\n  //     });\n  //   }\n  // },[callAccepted])\n\n  const joinRoom = (roomId, userId, nickname) => {\n    socket.emit('join', {\n      userId,\n      roomId\n    });\n    setUserId(userId);\n    setRoomId(roomId);\n    setPartnerId(partnerId);\n    setName(nickname);\n  };\n\n  const sendMsg = (msg, nickname) => {\n    socket.emit('sendMsg', {\n      msg,\n      userId,\n      nickname,\n      roomId\n    });\n  };\n\n  const answerCall = async () => {\n    let s = ss.stream;\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      s\n    });\n    peer.on('signal', data => {\n      ;\n      socket.emit('answercall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      console.log(currentStream);\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const initializeVideo = async () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      ss.stream = currentStream;\n      myVideo.current.srcObject = currentStream;\n    });\n  };\n\n  const callUser = async () => {\n    let s = ss.stream;\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      s\n    });\n    peer.on('signal', data => {\n      socket.emit('calluser', {\n        signalData: data,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    document.getElementById(\"container\").style.left = \"50%\";\n    document.getElementById(\"container\").style.width = \"70%\";\n    document.getElementById(\"chat\").style.width = \"800px\";\n    document.getElementById(\"video-div\").style.visibility = \"none\";\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      newMessage,\n      sendMsg,\n      joinRoom,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      callUser,\n      leaveCall,\n      answerCall,\n      users,\n      isOnline,\n      initializeVideo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"GxX7gpkFx8UkZCcDNl4eVM51Dj0=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","ENDPOINT","socket","ss","stream","ContextProvider","children","callAccepted","setCallAccepted","callEnded","setCallEnded","setStream","name","setName","call","setCall","userId","setUserId","roomId","setRoomId","newMessage","setNewMessage","partnerId","setPartnerId","isOnline","setIsOnline","users","setUsers","myVideo","userVideo","connectionRef","on","data","console","log","id","length","e","document","getElementById","style","left","width","visibility","chat","from","callerName","signal","isReceivingCall","joinRoom","nickname","emit","sendMsg","msg","answerCall","s","peer","initiator","trickle","to","currentStream","current","srcObject","initializeVideo","navigator","mediaDevices","getUserMedia","video","audio","then","callUser","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst ENDPOINT='localhost:5000';\r\nlet socket;\r\nconst ss ={stream:null};\r\nconst ContextProvider = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [userId,setUserId] = useState('');\r\n  const [roomId,setRoomId] = useState('');\r\n  const [newMessage,setNewMessage] = useState([]);\r\n  const [partnerId,setPartnerId] = useState();\r\n  const [isOnline,setIsOnline] = useState(true);\r\n  const [users,setUsers] = useState();\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n\r\n   \r\n\r\n  useEffect(async() => {\r\n\r\n    socket = io(ENDPOINT);\r\n    \r\n        \r\n\r\n\r\n    socket.on('me',(data)=>{\r\n        console.log(data.id);\r\n        console.log(data.users);\r\n        console.log(data.users.length)\r\n       \r\n     })\r\n\r\n     socket.on('returnDiv',e=>{\r\n        document.getElementById(\"container\").style.left = \"50%\"\r\n        document.getElementById(\"container\").style.width = \"80%\";\r\n        document.getElementById(\"chat\").style.width = \"1000px\";\r\n        document.getElementById(\"video-div\").style.visibility = \"none\";\r\n\r\n     })\r\n\r\n     socket.on('moveDiv',e=>{\r\n        \r\n        document.getElementById(\"container\").style.left = \"36%\"\r\n        document.getElementById(\"container\").style.width = \"70%\";\r\n        document.getElementById(\"chat\").style.width = \"800px\";\r\n        document.getElementById(\"video-div\").style.visibility = \"visible\";\r\n        \r\n     })\r\n\r\n    socket.on('dc',(data)=>{\r\n        // console.log(data.id);\r\n        console.log(data.users);\r\n        setUsers(data.users);\r\n   })\r\n\r\n    socket.on('chatMsg',(chat)=>{\r\n        setNewMessage(chat);\r\n    })\r\n\r\n\r\n    socket.on('calluser',async ({ from, name: callerName, signal })=> {\r\n      \r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n      \r\n    });\r\n  }, []);\r\n\r\n  // useEffect(()=>{\r\n  //   if(callAccepted)\r\n  //   {\r\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n  //     .then((currentStream) => {\r\n  //     setStream(currentStream);\r\n  //     myVideo.current.srcObject = currentStream;\r\n  //     });\r\n  //   }\r\n  // },[callAccepted])\r\n\r\n  \r\n\r\n  \r\n  const joinRoom = (roomId,userId,nickname) =>{\r\n      socket.emit('join',{userId,roomId});\r\n      setUserId(userId);\r\n      setRoomId(roomId);\r\n      setPartnerId(partnerId)\r\n      setName(nickname);\r\n  }\r\n\r\n  const sendMsg = (msg,nickname) =>{\r\n      socket.emit('sendMsg',{msg,userId,nickname,roomId})\r\n  }\r\n\r\n  const answerCall = async() => {\r\n    let s = ss.stream;\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, s });\r\n    peer.on('signal', (data) => {;\r\n      socket.emit('answercall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      console.log(currentStream)\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n    peer.signal(call.signal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const initializeVideo= async()=>{\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n    .then((currentStream) => {\r\n    setStream(currentStream);\r\n    ss.stream = currentStream;\r\n    myVideo.current.srcObject = currentStream;\r\n    }); \r\n  }\r\n\r\n  const callUser = async() => {\r\n    let s = ss.stream;\r\n    const peer = new Peer({ initiator: true, trickle: false, s });\r\n    peer.on('signal', (data) => {\r\n    socket.emit('calluser', {  signalData: data,  name });\r\n    \r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on('callaccepted', (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    document.getElementById(\"container\").style.left = \"50%\"\r\n    document.getElementById(\"container\").style.width = \"70%\";\r\n    document.getElementById(\"chat\").style.width = \"800px\";\r\n    document.getElementById(\"video-div\").style.visibility = \"none\";\r\n    connectionRef.current.destroy();\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={{\r\n      call,\r\n      callAccepted,\r\n      myVideo,\r\n      newMessage,\r\n      sendMsg,\r\n      joinRoom,\r\n      userVideo,\r\n      stream,\r\n      name,\r\n      setName,\r\n      callEnded,\r\n      callUser,\r\n      leaveCall,\r\n      answerCall,\r\n      users,\r\n      isOnline,\r\n      initializeVideo,\r\n    }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };"]},"metadata":{},"sourceType":"module"}