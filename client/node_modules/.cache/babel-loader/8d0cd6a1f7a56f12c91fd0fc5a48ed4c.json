{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\components\\\\Cinema.js\",\n    _s = $RefreshSig$();\n\nimport ReactPlayer from 'react-player';\nimport '../css/videoPlayer.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport io from 'socket.io-client';\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Cinema() {\n  _s();\n\n  const ENDPOINT = 'localhost:5000';\n  const [ready, setReady] = useState(false);\n  const [play, setPlay] = useState(false);\n  const videoRef = useRef();\n  const initialRun = useRef(true);\n  useEffect(async () => {\n    const ac = new AbortController();\n    socket = io(ENDPOINT);\n\n    if (initialRun.current) {\n      await axios.get('/user/getRoomId').then(res => res.data).catch(err => console.log(err)).then(res => {\n        socket.emit('join', res.roomInfo._id);\n      });\n      initialRun.current = false;\n    }\n\n    socket.on('changeState', state => {\n      setPlay(state);\n    });\n    socket.on('update', time => {\n      if (videoRef.current.getCurrentTime() < time - 2 || videoRef.current.getCurrentTime() < time + 2) {\n        videoRef.current.seekTo(time, 'seconds');\n      }\n    });\n    return function cancel() {\n      ac.abort();\n    };\n  }, []);\n\n  function displayProgress() {\n    socket.emit('keepUpdate', videoRef.current.getCurrentTime());\n    const point = document.getElementById('progress-point');\n    const value = videoRef.current.getCurrentTime() / (videoRef.current.getDuration() / 100);\n    point.style.left = value + \"%\";\n  }\n\n  function handleProgressChange(event) {\n    const progressBarWidth = document.getElementById(\"progress-bar\");\n    const choose = event.nativeEvent.offsetX;\n    const pointed = choose / progressBarWidth.offsetWidth * videoRef.current.getDuration();\n    videoRef.current.seekTo(pointed, 'seconds');\n    setPlay(true);\n  }\n\n  function handleVideoState() {\n    socket.emit('changeVideoState', play);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: videoRef,\n        playing: play,\n        height: \"100%\",\n        width: \"100%\",\n        url: \"https://www.youtube.com/watch?v=0eIY5b0RKE0\",\n        onProgress: displayProgress,\n        onReady: () => setReady(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleVideoState,\n          children: play ? /*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"progress-bar\",\n          className: \"progress-bar status\",\n          onClick: handleProgressChange,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"progress-point\",\n            className: \"progress-point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Cinema, \"4Tt2zvi4IAPW711fpzyDEP2/uNw=\");\n\n_c = Cinema;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cinema\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/components/Cinema.js"],"names":["ReactPlayer","IconButton","PlayArrowIcon","PauseIcon","io","useEffect","useRef","useState","axios","socket","Cinema","ENDPOINT","ready","setReady","play","setPlay","videoRef","initialRun","ac","AbortController","current","get","then","res","data","catch","err","console","log","emit","roomInfo","_id","on","state","time","getCurrentTime","seekTo","cancel","abort","displayProgress","point","document","getElementById","value","getDuration","style","left","handleProgressChange","event","progressBarWidth","choose","nativeEvent","offsetX","pointed","offsetWidth","handleVideoState","display"],"mappings":"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","sourcesContent":["import ReactPlayer from 'react-player'\r\nimport '../css/videoPlayer.css';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport io from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nlet socket;\r\nexport default function Cinema()\r\n{\r\n  const ENDPOINT = 'localhost:5000';\r\n  const [ready,setReady] = useState(false);\r\n  const [play,setPlay] =useState(false);\r\n  const videoRef = useRef();\r\n  const initialRun = useRef(true);\r\n  useEffect(async()=>{\r\n      const ac = new AbortController();\r\n        socket = io(ENDPOINT);\r\n        if(initialRun.current)\r\n        {\r\n            await axios.get('/user/getRoomId')\r\n            .then(res=>res.data)\r\n            .catch(err=>console.log(err))\r\n            .then(res=>{\r\n                socket.emit('join',res.roomInfo._id);\r\n            });\r\n            initialRun.current = false;\r\n        }\r\n        socket.on('changeState',state=>{\r\n            setPlay(state);\r\n        });\r\n\r\n        socket.on('update',time=>{\r\n            if(videoRef.current.getCurrentTime()<time-2||videoRef.current.getCurrentTime()<time+2){\r\n                videoRef.current.seekTo(time,'seconds');\r\n            }\r\n        })\r\n      return function cancel(){\r\n          ac.abort();\r\n      }\r\n  },[])\r\n\r\n  function displayProgress()\r\n  {\r\n      socket.emit('keepUpdate',videoRef.current.getCurrentTime());\r\n      const point = document.getElementById('progress-point');\r\n      const value = videoRef.current.getCurrentTime()/(videoRef.current.getDuration()/100);\r\n      point.style.left = value+\"%\";\r\n  }\r\n   \r\n  function handleProgressChange(event)\r\n  {\r\n      const progressBarWidth = document.getElementById(\"progress-bar\");\r\n      const choose = event.nativeEvent.offsetX;\r\n      const pointed = (choose/progressBarWidth.offsetWidth)*videoRef.current.getDuration();\r\n      videoRef.current.seekTo(pointed,'seconds');\r\n      setPlay(true);\r\n      \r\n  }\r\n  function handleVideoState()\r\n  {\r\n    socket.emit('changeVideoState',play);\r\n  }\r\n    return <div>\r\n        <div className=\"video-player\">\r\n        <ReactPlayer \r\n            ref={videoRef}\r\n            playing={play}\r\n            height=\"100%\"\r\n            width= \"100%\"\r\n            url=\"https://www.youtube.com/watch?v=0eIY5b0RKE0\"\r\n            onProgress={displayProgress}\r\n            onReady ={()=>setReady(true)}\r\n        />\r\n            <div style={{display:\"flex\"}}>\r\n                <IconButton onClick={handleVideoState}>{play?<PauseIcon/>:<PlayArrowIcon/>}</IconButton>\r\n                <div id=\"progress-bar\" className=\"progress-bar status\" onClick={handleProgressChange}>\r\n                <div id=\"progress-point\" className=\"progress-point\"></div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}