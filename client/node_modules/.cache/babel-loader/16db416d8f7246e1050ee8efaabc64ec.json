{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\components\\\\MemoryBook\\\\MemoryPost.js\",\n    _s = $RefreshSig$();\n\nimport '../../css/memoryPost.css';\nimport ReactAvatar from '@material-ui/core/Avatar';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport IconButton from '@material-ui/core/IconButton';\nimport ImageGallery from \"react-image-gallery\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoryPost(props) {\n  _s();\n\n  const {\n    post,\n    userId,\n    setIsEditing,\n    setPostData,\n    setIsPosting,\n    setPost\n  } = props;\n  const [openMore, setOpenMore] = useState(false);\n  const [url, setUrl] = useState([]);\n  const emojiMap = {\n    \"happy\": \"😀\",\n    \"sad\": \"☹️\",\n    \"surprised\": \"😮\",\n    \"meh\": \"😕\",\n    \"annoyed\": \"🙄\",\n    \"sleepy\": \"😴\",\n    \"love\": \"🥰\",\n    \"touched\": \"😭\",\n    \"shy\": \"😌\",\n    \"amazed\": \"🤩\"\n  };\n  const monthMap = {\n    \"01\": \"January\",\n    \"02\": \"February\",\n    \"03\": \"March\",\n    \"04\": \"April\",\n    \"05\": \"May\",\n    \"06\": \"June\",\n    \"07\": \"July\",\n    \"08\": \"August\",\n    \"09\": \"September\",\n    \"10\": \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n  };\n  useEffect(async () => {\n    let temp = [];\n    await post.fileId.map(id => {\n      let url = \"/post/getPostImage/\" + id;\n      temp.push(url);\n    });\n    setUrl(temp);\n  }, [post]);\n\n  function constructGalleryUrls(fileId) {\n    return fileId.map(id => {\n      let url = \"/post/getPostImage/\" + id;\n      return {\n        original: url\n      };\n    });\n  }\n\n  function handleEdit() {\n    setPostData({\n      post: post,\n      url: url\n    });\n    setIsEditing(true);\n    setIsPosting(true);\n    setOpenMore(false);\n  }\n\n  async function deletePost() {\n    const formdata = new FormData();\n    formdata.append('postId', post._id);\n\n    for (let i = 0; i < post.fileId.length; i++) {\n      formdata.append('fileId[]', post.fileId[i]);\n    }\n\n    await axios({\n      method: 'post',\n      url: '/post/deletePost',\n      data: formdata,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res.status) {\n        setPost(prevData => {\n          return prevData.filter(posts => {\n            return posts._id !== post._id;\n          });\n        });\n        alert(\"Memory deleted\");\n      } else {\n        alert(\"Opps something went wrong with the server!\");\n      }\n    });\n  }\n\n  function formatDate(date) {\n    const today = new Date(parseInt(Date.parse(date), 10));\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    return dd + \" \" + monthMap[mm] + \" \" + yyyy;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-div\",\n    children: [openMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-more-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-more-option edit\",\n        onClick: handleEdit,\n        children: \"Edit Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-more-option delete\",\n        onClick: deletePost,\n        children: \"Delete Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      id: \"post-more\",\n      onClick: () => setOpenMore(!openMore),\n      children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 73\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [userId === post.creatorId ? /*#__PURE__*/_jsxDEV(ReactAvatar, {\n        src: \"/gridFs/getProfile\",\n        id: \"post-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(ReactAvatar, {\n        src: \"/gridFs/getPartnerProfile\",\n        id: \"post-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-feeling\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), post.feeling && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \\xA0\\u2022 \\xA0is feeling \", post.feeling, \"\\xA0\", emojiMap[post.feeling]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatDate(post.timeOfCreation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-text\",\n      children: post.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), post.fileId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-images\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-img-div\",\n        children: /*#__PURE__*/_jsxDEV(ImageGallery, {\n          items: constructGalleryUrls(post.fileId),\n          showFullscreenButton: false,\n          showPlayButton: false,\n          showThumbnails: false,\n          className: \"post-gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 11\n  }, this);\n}\n\n_s(MemoryPost, \"wjdVXKKDo067gDOxsKuxUXDh/UE=\");\n\n_c = MemoryPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryPost\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/components/MemoryBook/MemoryPost.js"],"names":["ReactAvatar","MoreHorizIcon","IconButton","ImageGallery","useEffect","useState","axios","MemoryPost","props","post","userId","setIsEditing","setPostData","setIsPosting","setPost","openMore","setOpenMore","url","setUrl","emojiMap","monthMap","temp","fileId","map","id","push","constructGalleryUrls","original","handleEdit","deletePost","formdata","FormData","append","_id","i","length","method","data","headers","then","res","catch","err","console","log","status","prevData","filter","posts","alert","formatDate","date","today","Date","parseInt","parse","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","creatorId","nickname","feeling","timeOfCreation","text"],"mappings":"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","sourcesContent":["import '../../css/memoryPost.css'\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function MemoryPost(props)\r\n{\r\n    const{post,userId,setIsEditing,setPostData,setIsPosting,setPost} = props\r\n    const [openMore,setOpenMore] = useState(false);\r\n    const [url,setUrl] = useState([]);\r\n\r\n    const emojiMap={\r\n        \"happy\": \"😀\",\r\n        \"sad\": \"☹️\",\r\n        \"surprised\": \"😮\",\r\n        \"meh\": \"😕\",\r\n        \"annoyed\": \"🙄\",\r\n        \"sleepy\": \"😴\",\r\n        \"love\": \"🥰\",\r\n        \"touched\": \"😭\",\r\n        \"shy\": \"😌\",\r\n        \"amazed\": \"🤩\"\r\n    }\r\n\r\n    const monthMap = {\r\n        \"01\": \"January\",\r\n        \"02\": \"February\",\r\n        \"03\": \"March\",\r\n        \"04\": \"April\",\r\n        \"05\": \"May\",\r\n        \"06\": \"June\",\r\n        \"07\": \"July\",\r\n        \"08\": \"August\",\r\n        \"09\": \"September\",\r\n        \"10\": \"October\",\r\n        \"11\": \"November\",\r\n        \"12\": \"December\",\r\n      }\r\n    \r\n\r\n    useEffect(async()=>{\r\n        let temp =[];\r\n       await post.fileId.map(id=>{\r\n            let url = \"/post/getPostImage/\"+id;\r\n            temp.push(url);\r\n        })\r\n        setUrl(temp);\r\n    },[post])\r\n    \r\n    function constructGalleryUrls(fileId)\r\n    {\r\n        return fileId.map(id=>{\r\n            let url = \"/post/getPostImage/\"+id;\r\n            return {original:url};\r\n        })\r\n        \r\n    }\r\n    function handleEdit()\r\n    {\r\n        setPostData({post:post,url:url});\r\n        setIsEditing(true);\r\n        setIsPosting(true);\r\n        setOpenMore(false);\r\n    }\r\n    async function deletePost()\r\n    {\r\n        const formdata = new FormData();\r\n        formdata.append('postId',post._id);\r\n        for(let i=0;i<post.fileId.length;i++)\r\n        {\r\n            formdata.append('fileId[]',post.fileId[i])\r\n        }\r\n        await axios({\r\n            method:'post',\r\n            url:'/post/deletePost',\r\n            data:formdata,\r\n            headers:{'Content-Type': 'multipart/form-data'}\r\n        })\r\n        .then(res=>res.data)\r\n        .catch(err=>console.log(err))\r\n        .then(res=>{\r\n            if(res.status)\r\n            {\r\n                setPost(prevData=>{\r\n                    return prevData.filter(posts=>{\r\n                        return posts._id !== post._id;\r\n                    })\r\n                })\r\n\r\n                alert(\"Memory deleted\");\r\n            }\r\n            else{\r\n                alert(\"Opps something went wrong with the server!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    function formatDate(date) {\r\n        const today = new Date(parseInt(Date.parse(date), 10));\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        return dd + \" \" + monthMap[mm]+\" \"+yyyy\r\n      }\r\n\r\n    return<div className=\"post-div\">\r\n        {openMore&&<div className=\"post-more-div\">\r\n            <div className=\"post-more-option edit\" onClick={handleEdit}>\r\n            Edit Memory\r\n            </div>\r\n            <div className=\"post-more-option delete\" onClick={deletePost}>\r\n            Delete Memory\r\n            </div>\r\n            </div>}\r\n        <IconButton id=\"post-more\" onClick={()=>setOpenMore(!openMore)}><MoreHorizIcon fontSize=\"medium\"/></IconButton>\r\n        <div className=\"post-header\">\r\n            {userId===post.creatorId?<ReactAvatar src=\"/gridFs/getProfile\" id=\"post-avatar\"/>:<ReactAvatar src=\"/gridFs/getPartnerProfile\" id=\"post-avatar\"/>}\r\n           <div className=\"post-desc\">\r\n            <div className=\"post-feeling\">\r\n                <h3>{post.nickname}</h3>\r\n                {post.feeling&&<h3> &nbsp;• &nbsp;is feeling {post.feeling}&nbsp;{emojiMap[post.feeling]}</h3>}  \r\n            </div>\r\n              <div className=\"post-time\">\r\n                <p>{formatDate(post.timeOfCreation)}</p>\r\n              </div>\r\n            </div> \r\n        </div>\r\n        <div className=\"post-text\">\r\n        {post.text}\r\n        </div>\r\n        {post.fileId&&<div className=\"post-images\">\r\n            <div className=\"post-img-div\">\r\n            <ImageGallery items={constructGalleryUrls(post.fileId)} showFullscreenButton={false} showPlayButton={false} showThumbnails={false} className=\"post-gallery\" />\r\n            </div>\r\n        </div>}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}