{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\myProject\\\\couplove\\\\client\\\\src\\\\components\\\\UserProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport '../css/profileInfo.css';\nimport ReactAvatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genders = [{\n  value: 'male',\n  label: 'male'\n}, {\n  value: 'female',\n  label: 'female'\n}];\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: 20,\n    minWidth: \"90%\"\n  },\n  large: {\n    width: theme.spacing(19),\n    height: theme.spacing(19)\n  }\n}));\nexport default function UserProfileForm() {\n  _s();\n\n  const [nickname, setNickname] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [croppedUrl, setCroppedUrl] = useState();\n  const [uploaded, setUploaded] = useState(false);\n  const [dob, setDob] = useState(new Date());\n  const [gender, setGender] = useState('male');\n  const formRef = useRef();\n  const classes = useStyles();\n  useEffect(() => {\n    const ac = new AbortController();\n    axios.get('/auth/isLoggedIn').then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res.isLoggedIn === false) {\n        window.open('/login', '_self');\n      } else if (res.user.nickname) {\n        setNickname(res.user.nickname);\n      }\n    });\n    return function cancel() {\n      ac.abort();\n    };\n  });\n\n  async function handleSubmit(event) {\n    if (uploaded) {\n      axios.get('/gridFs/deleteImg');\n    }\n\n    event.preventDefault();\n    const formData = new FormData(formRef.current);\n    await axios({\n      method: 'post',\n      url: '/user/info',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    window.location.href = \"/\";\n  }\n\n  function toggleNewFile(event) {\n    const re = /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i;\n    const file = event.target.files[0];\n\n    if (!re.test(file.name)) {\n      alert(\"file extension is not allowed.\");\n    } else {\n      setUploaded(true);\n      const reader = new FileReader();\n      document.getElementById(\"avatar\").setAttribute(\"src\", this.result);\n      reader.readAsDataURL(file);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infoForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(ReactAvatar, {\n        style: {\n          borderStyle: \"solid\",\n          borderColor: \"#F0F2F5\",\n          borderWidth: \"2px\",\n          margin: \"auto\"\n        },\n        alt: \"\",\n        src: \"/gridFs/getProfile\",\n        id: \"avatar\",\n        className: classes.large\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        onChange: toggleNewFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoDiv\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"nickname\",\n          className: \"inputFields\",\n          label: \"Nickname\",\n          variant: \"outlined\",\n          name: \"nickname\",\n          value: nickname,\n          onChange: e => {\n            setNickname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            value: gender,\n            onChange: e => {\n              setGender(e.target.value);\n            },\n            label: \"Gender\",\n            name: \"gender\",\n            children: genders.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            margin: \"normal\",\n            id: \"dateOfBirth\",\n            label: \"Date of birth (mm/dd/yyyy)\",\n            name: \"dateOfBirth\",\n            format: \"MM/dd/yyyy\",\n            value: dob,\n            onChange: date => {\n              setDob(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"bio\",\n          label: \"Bio\",\n          variant: \"outlined\",\n          name: \"bio\",\n          className: \"inputFields\",\n          value: bio,\n          onChange: e => {\n            setBio(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submitInfo\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this);\n}\n\n_s(UserProfileForm, \"CiBWhCK8oHCNtskEyXDsK7QftGM=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileForm\");","map":{"version":3,"sources":["C:/Users/PC/myProject/couplove/client/src/components/UserProfileForm.js"],"names":["useEffect","useState","useRef","axios","TextField","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","InputLabel","FormControl","Select","MenuItem","ReactAvatar","Button","genders","value","label","useStyles","theme","formControl","marginTop","minWidth","large","width","spacing","height","UserProfileForm","nickname","setNickname","bio","setBio","croppedUrl","setCroppedUrl","uploaded","setUploaded","dob","setDob","Date","gender","setGender","formRef","classes","ac","AbortController","get","then","res","data","catch","err","console","log","isLoggedIn","window","open","user","cancel","abort","handleSubmit","event","preventDefault","formData","FormData","current","method","url","headers","location","href","toggleNewFile","re","file","target","files","test","name","alert","reader","FileReader","document","getElementById","setAttribute","result","readAsDataURL","borderStyle","borderColor","borderWidth","margin","e","map","option","date"],"mappings":"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","sourcesContent":["import {useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport '../css/profileInfo.css';\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst genders = [\r\n    {\r\n      value: 'male',\r\n      label: 'male',\r\n    },\r\n    {\r\n      value: 'female',\r\n      label: 'female',\r\n    },\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginTop:20,\r\n      minWidth: \"90%\",\r\n    },\r\n    large: {\r\n      width: theme.spacing(19),\r\n      height: theme.spacing(19),\r\n    },\r\n  }));\r\nexport default function UserProfileForm()\r\n{\r\n    const [nickname,setNickname] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [croppedUrl, setCroppedUrl] = useState();\r\n    const [uploaded,setUploaded] = useState(false);\r\n    const [dob,setDob] = useState(new Date());\r\n    const [gender,setGender] = useState('male');\r\n    const formRef = useRef();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        axios.get('/auth/isLoggedIn')\r\n        .then(res =>res.data)\r\n        .catch(err => console.log(err))\r\n        .then(res => {\r\n          if (res.isLoggedIn === false) {\r\n            window.open('/login', '_self');\r\n          } \r\n          else if(res.user.nickname)\r\n          {\r\n            setNickname(res.user.nickname);\r\n          }\r\n        })\r\n        return function cancel() {\r\n          ac.abort()\r\n        }\r\n      });\r\n\r\n      async function handleSubmit(event) {\r\n        if(uploaded){axios.get('/gridFs/deleteImg');}\r\n        event.preventDefault();\r\n        const formData = new FormData(formRef.current);\r\n         await  axios({\r\n            method:'post',\r\n            url:'/user/info',\r\n            data:formData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n          })\r\n          window.location.href = \"/\";\r\n      }\r\n\r\n      function toggleNewFile(event)\r\n      {\r\n         \r\n         const re = /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i;\r\n         const file = event.target.files[0];\r\n         if(!re.test(file.name))\r\n         {\r\n           alert(\"file extension is not allowed.\");\r\n         }\r\n         else\r\n         {\r\n          setUploaded(true);\r\n          const reader = new FileReader();\r\n          document.getElementById(\"avatar\").setAttribute(\"src\",this.result)\r\n          reader.readAsDataURL(file);\r\n         }\r\n      }\r\n      \r\n      \r\n\r\n    return <div className=\"infoForm\">\r\n        \r\n    <form onSubmit={handleSubmit} ref={formRef}>\r\n    <ReactAvatar\r\n            style={{borderStyle: \"solid\", borderColor: \"#F0F2F5\", borderWidth: \"2px\", margin: \"auto\"}}\r\n            alt=\"\"\r\n            src=\"/gridFs/getProfile\"\r\n            id=\"avatar\"\r\n            className={classes.large} />\r\n          <input type=\"file\" name=\"file\" id=\"file\" onChange={toggleNewFile}/>\r\n          <br/>\r\n          <div className=\"infoDiv\">\r\n            <TextField\r\n            id=\"nickname\"\r\n            className=\"inputFields\"\r\n            label=\"Nickname\"\r\n            variant=\"outlined\"\r\n            name=\"nickname\"\r\n            value={nickname}\r\n            onChange={(e) => {setNickname(e.target.value)}}/>\r\n            <br/>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={gender}\r\n              onChange={(e) => {setGender(e.target.value)}}\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n            >\r\n              {genders.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl> \r\n          <br />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"dateOfBirth\"\r\n              label=\"Date of birth (mm/dd/yyyy)\"\r\n              name=\"dateOfBirth\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={dob}\r\n              onChange={(date) => {setDob(date)}}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n          <br/>    \r\n        \r\n     \r\n          <TextField\r\n            id=\"bio\"\r\n            label=\"Bio\"\r\n            variant=\"outlined\"\r\n            name=\"bio\"\r\n            className=\"inputFields\"\r\n            value={bio}\r\n            onChange={(e) => {setBio(e.target.value)}}/>\r\n            <br/>\r\n            \r\n          <Button type=\"submit\" id=\"submitInfo\">\r\n              submit\r\n          </Button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}