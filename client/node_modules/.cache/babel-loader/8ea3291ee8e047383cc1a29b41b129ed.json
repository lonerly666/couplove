{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\components\\\\UserProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport '../css/profileInfo.css';\nimport ReactAvatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport IconButton from '@material-ui/core/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genders = [{\n  value: 'male',\n  label: 'male'\n}, {\n  value: 'female',\n  label: 'female'\n}];\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: 20,\n    minWidth: \"90%\"\n  }\n}));\nexport default function UserProfileForm() {\n  _s();\n\n  const [nickname, setNickname] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [croppedUrl, setCroppedUrl] = useState();\n  const [uploaded, setUploaded] = useState(false);\n  const [dob, setDob] = useState(new Date());\n  const [gender, setGender] = useState('male');\n  const [newProfile, setNewProfile] = useState(false);\n  const [partner, setPartner] = useState();\n  const formRef = useRef();\n  const classes = useStyles();\n  useEffect(() => {\n    const ac = new AbortController();\n    axios.get('/auth/isLoggedIn').then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res.isLoggedIn === false) {\n        window.open('/login', '_self');\n      } else if (res.user.nickname) {\n        setNickname(res.user.nickname);\n        setDob(res.user.dateOfBirth);\n        setGender(res.user.gender);\n        setBio(res.user.bio);\n\n        if (res.user.partner !== null) {\n          setPartner(res.user.partner);\n\n          if (res.user.dateOfRelationship) {}\n        }\n      }\n    });\n    return function cancel() {\n      ac.abort();\n    };\n  }, []);\n  useEffect(() => {\n    const ac = new AbortController();\n    axios({\n      method: 'get',\n      url: '/gridFs/checkExists',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res === true) {\n        document.getElementById(\"overlay\").style.visibility = \"hidden\";\n      }\n    });\n    return function cancel() {\n      ac.abort();\n    };\n  }, []);\n\n  if (uploaded) {\n    const reader = new FileReader();\n\n    reader.onload = function (event) {\n      if (event.target.result === null) {\n        return;\n      }\n\n      document.getElementById(\"avatarImg\").setAttribute(\"src\", event.target.result);\n    };\n\n    reader.readAsDataURL(croppedUrl);\n  }\n\n  async function handleSubmit(event) {\n    if (uploaded) {\n      axios.get('/gridFs/deleteImg');\n    }\n\n    event.preventDefault();\n    const formData = new FormData(formRef.current);\n    partner && formData.append('partner', partner);\n    await axios({\n      method: 'post',\n      url: '/user/info',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    window.location.href = \"/\";\n  }\n\n  function toggleNewFile(event) {\n    const file = event.target.files[0];\n\n    if (file === undefined) {\n      return;\n    } else {\n      document.getElementById(\"overlay\").style.visibility = \"hidden\";\n      setCroppedUrl(file);\n      setUploaded(true);\n    }\n  }\n\n  function uploadFile() {\n    document.getElementById(\"file\").click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infoForm\",\n    id: \"infoForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"avatar\",\n        children: [/*#__PURE__*/_jsxDEV(ReactAvatar, {\n          id: \"overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploaded ? \"\" : \"/gridFs/getProfile\",\n          id: \"avatarImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileIpt\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          id: \"file\",\n          onChange: toggleNewFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          id: \"uploadBtn\",\n          onClick: uploadFile,\n          children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoDiv\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"nickname\",\n          className: \"inputFields\",\n          label: \"Nickname\",\n          variant: \"outlined\",\n          name: \"nickname\",\n          value: nickname,\n          onChange: e => {\n            setNickname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-outlined-label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-outlined-label\",\n            id: \"demo-simple-select-outlined\",\n            value: gender,\n            onChange: e => {\n              setGender(e.target.value);\n            },\n            label: \"Gender\",\n            name: \"gender\",\n            children: genders.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            margin: \"normal\",\n            id: \"dateOfBirth\",\n            label: \"Date of birth (mm/dd/yyyy)\",\n            name: \"dateOfBirth\",\n            format: \"MM/dd/yyyy\",\n            value: dob,\n            onChange: date => {\n              setDob(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            margin: \"normal\",\n            id: \"dateOfRelation\",\n            label: \"Date of relationship\",\n            name: \"dateOfRelationship\",\n            format: \"MM/dd/yyyy\",\n            value: dob,\n            onChange: date => {\n              setDob(date);\n            },\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"bio\",\n          label: \"Bio\",\n          variant: \"outlined\",\n          name: \"bio\",\n          className: \"inputFields\",\n          value: bio,\n          onChange: e => {\n            setBio(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"submitInfo\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 12\n  }, this);\n}\n\n_s(UserProfileForm, \"z2BtQXfG0IORGep0Dm2LcTaB2Qk=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfileForm\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/components/UserProfileForm.js"],"names":["useEffect","useState","useRef","axios","TextField","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","InputLabel","FormControl","Select","MenuItem","ReactAvatar","Button","AddAPhotoIcon","IconButton","genders","value","label","useStyles","theme","formControl","marginTop","minWidth","UserProfileForm","nickname","setNickname","bio","setBio","croppedUrl","setCroppedUrl","uploaded","setUploaded","dob","setDob","Date","gender","setGender","newProfile","setNewProfile","partner","setPartner","formRef","classes","ac","AbortController","get","then","res","data","catch","err","console","log","isLoggedIn","window","open","user","dateOfBirth","dateOfRelationship","cancel","abort","method","url","headers","document","getElementById","style","visibility","reader","FileReader","onload","event","target","result","setAttribute","readAsDataURL","handleSubmit","preventDefault","formData","FormData","current","append","location","href","toggleNewFile","file","files","undefined","uploadFile","click","e","map","option","date"],"mappings":"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","sourcesContent":["import {useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport '../css/profileInfo.css';\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst genders = [\r\n    {\r\n      value: 'male',\r\n      label: 'male',\r\n    },\r\n    {\r\n      value: 'female',\r\n      label: 'female',\r\n    },\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginTop:20,\r\n      minWidth: \"90%\",\r\n    },\r\n  }));\r\nexport default function UserProfileForm()\r\n{\r\n    const [nickname,setNickname] = useState(\"\");\r\n    const [bio,setBio] = useState(\"\");\r\n    const [croppedUrl, setCroppedUrl] = useState();\r\n    const [uploaded,setUploaded] = useState(false);\r\n    const [dob,setDob] = useState(new Date());\r\n    const [gender,setGender] = useState('male');\r\n    const [newProfile,setNewProfile]=useState(false);\r\n    const [partner,setPartner] = useState();\r\n    const formRef = useRef();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        axios.get('/auth/isLoggedIn')\r\n        .then(res =>res.data)\r\n        .catch(err => console.log(err))\r\n        .then(res => {\r\n          if (res.isLoggedIn === false) {\r\n            window.open('/login', '_self');\r\n          } \r\n          else if(res.user.nickname)\r\n          {\r\n            setNickname(res.user.nickname);\r\n            setDob(res.user.dateOfBirth);\r\n            setGender(res.user.gender);\r\n            setBio(res.user.bio);\r\n            if(res.user.partner!==null)\r\n            {\r\n            setPartner(res.user.partner);\r\n            if(res.user.dateOfRelationship)\r\n            {\r\n              \r\n            }\r\n            }\r\n          }\r\n        })\r\n        return function cancel() {\r\n          ac.abort()\r\n        }\r\n      },[]);\r\n      useEffect(() => {\r\n        const ac = new AbortController();\r\n      axios({\r\n        method:'get',\r\n        url:'/gridFs/checkExists',\r\n        headers: {'Content-Type': 'multipart/form-data'}\r\n      })\r\n      .then(res=>res.data)\r\n      .catch(err=>console.log(err))\r\n      .then(res=>{\r\n        if(res===true)\r\n        {\r\n           document.getElementById(\"overlay\").style.visibility=\"hidden\";\r\n        }\r\n      })\r\n      return function cancel() {\r\n        ac.abort()\r\n      }\r\n    },[]);\r\n      if(uploaded)\r\n      {\r\n        const reader = new FileReader();\r\n        reader.onload = function(event){\r\n          if(event.target.result===null)\r\n          {\r\n            return;\r\n          }\r\n          document.getElementById(\"avatarImg\").setAttribute(\"src\",event.target.result);\r\n        }\r\n        reader.readAsDataURL(croppedUrl);\r\n       \r\n      }\r\n      async function handleSubmit(event) {\r\n        if(uploaded){axios.get('/gridFs/deleteImg');}\r\n        event.preventDefault();\r\n        \r\n        const formData = new FormData(formRef.current); \r\n        partner&&formData.append('partner',partner);\r\n         await  axios({\r\n            method:'post',\r\n            url:'/user/info',\r\n            data:formData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n          })\r\n          window.location.href = \"/\";\r\n      }\r\n\r\n      function toggleNewFile(event)\r\n      {\r\n        const file = event.target.files[0];\r\n         if(file===undefined)\r\n        {\r\n          return;\r\n        }\r\n        else\r\n        {\r\n         document.getElementById(\"overlay\").style.visibility=\"hidden\";\r\n         setCroppedUrl(file);\r\n         setUploaded(true);\r\n        }\r\n      }\r\n      \r\n      function uploadFile()\r\n      {\r\n         document.getElementById(\"file\").click();\r\n      }\r\n\r\n    return <div className=\"infoForm\" id=\"infoForm\">\r\n        \r\n    <form onSubmit={handleSubmit} ref={formRef}>\r\n      <div id=\"avatar\">\r\n       <ReactAvatar\r\n        id=\"overlay\"\r\n      />\r\n       <img src={uploaded?\"\":\"/gridFs/getProfile\"} id=\"avatarImg\"/>\r\n      </div>\r\n      <div className=\"fileIpt\">\r\n          <input type=\"file\" name=\"file\" id=\"file\" onChange={toggleNewFile}/>\r\n          <IconButton\r\n          id=\"uploadBtn\"\r\n          onClick={uploadFile}\r\n          >\r\n            <AddAPhotoIcon/>\r\n          </IconButton>\r\n      </div>\r\n          <br/>\r\n          <div className=\"infoDiv\">\r\n            <TextField\r\n            id=\"nickname\"\r\n            className=\"inputFields\"\r\n            label=\"Nickname\"\r\n            variant=\"outlined\"\r\n            name=\"nickname\"\r\n            value={nickname}\r\n            onChange={(e) => {setNickname(e.target.value)}}/>\r\n            <br/>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={gender}\r\n              onChange={(e) => {setGender(e.target.value)}}\r\n              label=\"Gender\"\r\n              name=\"gender\"\r\n            >\r\n              {genders.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl> \r\n          <br />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"dateOfBirth\"\r\n              label=\"Date of birth (mm/dd/yyyy)\"\r\n              name=\"dateOfBirth\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={dob}\r\n              onChange={(date) => {setDob(date)}}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"dateOfRelation\"\r\n              label=\"Date of relationship\"\r\n              name=\"dateOfRelationship\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={dob}\r\n              onChange={(date) => {setDob(date)}}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n          <br/>    \r\n        \r\n     \r\n          <TextField\r\n            id=\"bio\"\r\n            label=\"Bio\"\r\n            variant=\"outlined\"\r\n            name=\"bio\"\r\n            className=\"inputFields\"\r\n            value={bio}\r\n            onChange={(e) => {setBio(e.target.value)}}/>\r\n            <br/>\r\n            \r\n          <Button type=\"submit\" id=\"submitInfo\">\r\n              submit\r\n          </Button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}