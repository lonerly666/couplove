{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\temp\\\\couplove\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport sp from 'socket.io-stream';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst ENDPOINT = 'localhost:5000';\nlet socket;\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [userId, setUserId] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [newMessage, setNewMessage] = useState([]);\n  const [partnerId, setPartnerId] = useState();\n  const [isCalling, setIsCalling] = useState(false);\n  const [isOnline, setIsOnline] = useState(true);\n  const [users, setUsers] = useState();\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  const inititalRender = useRef(true);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (inititalRender.current) {\n      inititalRender.current = false;\n    } else {\n      initializeVideo();\n      socket.on('me', data => {\n        console.log(data.id);\n        console.log(data.users);\n        console.log(data.users.length);\n      });\n      socket.on('returnDiv', e => {\n        document.getElementById(\"container\").style.left = \"50%\";\n        document.getElementById(\"container\").style.width = \"80%\";\n        document.getElementById(\"chat\").style.width = \"1000px\";\n        document.getElementById(\"video-div\").style.display = \"none\";\n      });\n      socket.on('moveDiv', e => {\n        document.getElementById(\"container\").style.left = \"36%\";\n        document.getElementById(\"container\").style.width = \"70%\";\n        document.getElementById(\"chat\").style.width = \"800px\";\n        document.getElementById(\"video-div\").style.display = \"block\";\n      });\n      socket.on('calluser', async ({\n        from,\n        name: callerName,\n        signal\n      }) => {\n        setCall({\n          isReceivingCall: true,\n          from,\n          name: callerName,\n          signal\n        });\n      });\n    }\n  }, [isCalling]); // useEffect(()=>{\n  //   if(callAccepted)\n  //   {\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //     .then((currentStream) => {\n  //     setStream(currentStream);\n  //     myVideo.current.srcObject = currentStream;\n  //     });\n  //   }\n  // },[callAccepted])\n\n  const startCall = () => {\n    // setIsCalling(true);\n    socket.emit('calling');\n  };\n\n  const joinRoom = (roomId, userId, nickname) => {\n    socket.emit('join', {\n      userId,\n      roomId\n    });\n    setUserId(userId);\n    setRoomId(roomId);\n    setPartnerId(partnerId);\n    setName(nickname);\n  };\n\n  const sendMsg = (msg, nickname) => {\n    socket.emit('sendMsg', {\n      msg,\n      userId,\n      nickname,\n      roomId\n    });\n  };\n\n  const answerCall = async () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      ;\n      socket.emit('answercall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      console.log(currentStream);\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const initializeVideo = async () => {\n    await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      console.log(currentStream);\n      myVideo.current.srcObject = currentStream;\n    }); // socket.emit('streamFile',ss);\n    // return ss;\n  };\n\n  const callUser = async () => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('calluser', {\n        signalData: data,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    document.getElementById(\"container\").style.left = \"50%\";\n    document.getElementById(\"container\").style.width = \"70%\";\n    document.getElementById(\"chat\").style.width = \"800px\";\n    document.getElementById(\"video-div\").style.visibility = \"none\";\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      newMessage,\n      sendMsg,\n      joinRoom,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      callUser,\n      leaveCall,\n      answerCall,\n      users,\n      isOnline,\n      initializeVideo,\n      startCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"GNh7QcOQBihm3CzmgYyxjIDFSTg=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","sp","SocketContext","ENDPOINT","socket","ContextProvider","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","userId","setUserId","roomId","setRoomId","newMessage","setNewMessage","partnerId","setPartnerId","isCalling","setIsCalling","isOnline","setIsOnline","users","setUsers","myVideo","userVideo","connectionRef","inititalRender","current","initializeVideo","on","data","console","log","id","length","e","document","getElementById","style","left","width","display","from","callerName","signal","isReceivingCall","startCall","emit","joinRoom","nickname","sendMsg","msg","answerCall","peer","initiator","trickle","to","currentStream","srcObject","navigator","mediaDevices","getUserMedia","video","audio","then","callUser","signalData","leaveCall","visibility","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport sp from 'socket.io-stream';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst ENDPOINT='localhost:5000';\r\nlet socket;\r\nconst ContextProvider = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [userId,setUserId] = useState('');\r\n  const [roomId,setRoomId] = useState('');\r\n  const [newMessage,setNewMessage] = useState([]);\r\n  const [partnerId,setPartnerId] = useState();\r\n  const [isCalling,setIsCalling] = useState(false);\r\n  const [isOnline,setIsOnline] = useState(true);\r\n  const [users,setUsers] = useState();\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n  const inititalRender = useRef(true);\r\n\r\n   \r\n\r\n  useEffect(() => {\r\n\r\n    \r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n\r\n  if(inititalRender.current)\r\n  {\r\n    inititalRender.current =false;\r\n  }\r\n  else\r\n  {\r\n   initializeVideo();\r\n    socket.on('me',(data)=>{\r\n      console.log(data.id);\r\n      console.log(data.users);\r\n      console.log(data.users.length)\r\n     \r\n   })\r\n\r\n   socket.on('returnDiv',e=>{\r\n      document.getElementById(\"container\").style.left = \"50%\"\r\n      document.getElementById(\"container\").style.width = \"80%\";\r\n      document.getElementById(\"chat\").style.width = \"1000px\";\r\n      document.getElementById(\"video-div\").style.display = \"none\";\r\n\r\n   })\r\n\r\n   socket.on('moveDiv',e=>{\r\n      document.getElementById(\"container\").style.left = \"36%\"\r\n      document.getElementById(\"container\").style.width = \"70%\";\r\n      document.getElementById(\"chat\").style.width = \"800px\";\r\n      document.getElementById(\"video-div\").style.display = \"block\";\r\n      \r\n   })\r\n    \r\n\r\n    socket.on('calluser',async ({ from, name: callerName, signal })=> {\r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n      \r\n    });\r\n  }\r\n  },[isCalling])\r\n\r\n  // useEffect(()=>{\r\n  //   if(callAccepted)\r\n  //   {\r\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n  //     .then((currentStream) => {\r\n  //     setStream(currentStream);\r\n  //     myVideo.current.srcObject = currentStream;\r\n  //     });\r\n  //   }\r\n  // },[callAccepted])\r\n\r\n  const startCall  =()=>{\r\n    // setIsCalling(true);\r\n    socket.emit('calling');\r\n  }\r\n  \r\n  const joinRoom = (roomId,userId,nickname) =>{\r\n      socket.emit('join',{userId,roomId});\r\n      setUserId(userId);\r\n      setRoomId(roomId);\r\n      setPartnerId(partnerId)\r\n      setName(nickname);\r\n  }\r\n\r\n  const sendMsg = (msg,nickname) =>{\r\n      socket.emit('sendMsg',{msg,userId,nickname,roomId})\r\n  }\r\n\r\n  const answerCall = async() => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    peer.on('signal', (data) => {;\r\n      socket.emit('answercall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      console.log(currentStream);\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n    peer.signal(call.signal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const initializeVideo= async()=>{\r\n    await navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n    .then((currentStream) => {\r\n    setStream(currentStream);\r\n    console.log(currentStream);\r\n    myVideo.current.srcObject = currentStream;\r\n    }); \r\n    // socket.emit('streamFile',ss);\r\n    // return ss;\r\n    \r\n  }\r\n\r\n  const callUser = async() => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    peer.on('signal', (data) => {\r\n    socket.emit('calluser', {  signalData: data,  name });\r\n      \r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on('callaccepted', (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    document.getElementById(\"container\").style.left = \"50%\"\r\n    document.getElementById(\"container\").style.width = \"70%\";\r\n    document.getElementById(\"chat\").style.width = \"800px\";\r\n    document.getElementById(\"video-div\").style.visibility = \"none\";\r\n    connectionRef.current.destroy();\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={{\r\n      call,\r\n      callAccepted,\r\n      myVideo,\r\n      newMessage,\r\n      sendMsg,\r\n      joinRoom,\r\n      userVideo,\r\n      stream,\r\n      name,\r\n      setName,\r\n      callEnded,\r\n      callUser,\r\n      leaveCall,\r\n      answerCall,\r\n      users,\r\n      isOnline,\r\n      initializeVideo,\r\n      startCall,\r\n    }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };"]},"metadata":{},"sourceType":"module"}