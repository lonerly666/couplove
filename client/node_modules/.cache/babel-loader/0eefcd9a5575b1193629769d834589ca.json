{"ast":null,"code":"import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nvar baseMap = [7, 6, 5, 4, 3, 2, 1];\n/**\r\n * @name nextDay\r\n * @category Weekday Helpers\r\n * @summary When is the next day of the week?\r\n *\r\n * @description\r\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @param {Date | number} date - the date to check\r\n * @param {Day} day - day of the week\r\n * @returns {Date} - the date is the next day of week\r\n * @throws {TypeError} - 2 arguments required\r\n *\r\n * @example\r\n * // When is the next Monday after Mar, 20, 2020?\r\n * const result = nextDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 23 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the next Tuesday after Mar, 21, 2020?\r\n * const result = nextDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 24 2020 00:00:00\r\n */\n\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var map = genMap(day);\n  return addDays(toDate(date), map[getDay(toDate(date))]);\n}\n\nfunction genMap(daysToMove) {\n  if (daysToMove === 0) {\n    return baseMap;\n  } else {\n    var mapStart = baseMap.slice(-daysToMove);\n    var mapEnd = baseMap.slice(0, baseMap.length - daysToMove);\n    return mapStart.concat(mapEnd);\n  }\n}","map":{"version":3,"sources":["C:/Users/PC/temp/couplove/node_modules/date-fns/esm/nextDay/index.js"],"names":["requiredArgs","getDay","addDays","toDate","baseMap","nextDay","date","day","arguments","map","genMap","daysToMove","mapStart","slice","mapEnd","length","concat"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,IAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,GAAvB,EAA4B;AACzCP,EAAAA,YAAY,CAAC,CAAD,EAAIQ,SAAJ,CAAZ;AACA,MAAIC,GAAG,GAAGC,MAAM,CAACH,GAAD,CAAhB;AACA,SAAOL,OAAO,CAACC,MAAM,CAACG,IAAD,CAAP,EAAeG,GAAG,CAACR,MAAM,CAACE,MAAM,CAACG,IAAD,CAAP,CAAP,CAAlB,CAAd;AACD;;AAED,SAASI,MAAT,CAAgBC,UAAhB,EAA4B;AAC1B,MAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpB,WAAOP,OAAP;AACD,GAFD,MAEO;AACL,QAAIQ,QAAQ,GAAGR,OAAO,CAACS,KAAR,CAAc,CAACF,UAAf,CAAf;AACA,QAAIG,MAAM,GAAGV,OAAO,CAACS,KAAR,CAAc,CAAd,EAAiBT,OAAO,CAACW,MAAR,GAAiBJ,UAAlC,CAAb;AACA,WAAOC,QAAQ,CAACI,MAAT,CAAgBF,MAAhB,CAAP;AACD;AACF","sourcesContent":["import requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nimport getDay from \"../getDay/index.js\";\r\nimport addDays from \"../addDays/index.js\";\r\nimport toDate from \"../toDate/index.js\";\r\nvar baseMap = [7, 6, 5, 4, 3, 2, 1];\r\n/**\r\n * @name nextDay\r\n * @category Weekday Helpers\r\n * @summary When is the next day of the week?\r\n *\r\n * @description\r\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @param {Date | number} date - the date to check\r\n * @param {Day} day - day of the week\r\n * @returns {Date} - the date is the next day of week\r\n * @throws {TypeError} - 2 arguments required\r\n *\r\n * @example\r\n * // When is the next Monday after Mar, 20, 2020?\r\n * const result = nextDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 23 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the next Tuesday after Mar, 21, 2020?\r\n * const result = nextDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 24 2020 00:00:00\r\n */\r\n\r\nexport default function nextDay(date, day) {\r\n  requiredArgs(2, arguments);\r\n  var map = genMap(day);\r\n  return addDays(toDate(date), map[getDay(toDate(date))]);\r\n}\r\n\r\nfunction genMap(daysToMove) {\r\n  if (daysToMove === 0) {\r\n    return baseMap;\r\n  } else {\r\n    var mapStart = baseMap.slice(-daysToMove);\r\n    var mapEnd = baseMap.slice(0, baseMap.length - daysToMove);\r\n    return mapStart.concat(mapEnd);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}